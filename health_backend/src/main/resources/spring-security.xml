<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/mvc
						http://www.springframework.org/schema/mvc/spring-mvc.xsd
						http://code.alibabatech.com/schema/dubbo
						http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
                     http://www.springframework.org/schema/security
                     http://www.springframework.org/schema/security/spring-security.xsd">

    <!--配置允许指定资源可以访问,不需要通过登陆直接访问-->
    <!--<security:http security="none" pattern="/pages/a.html"></security:http>-->
    <!--<security:http security="none" pattern="/pages/b.html"></security:http>-->
    <!--<security:http security="none" pattern="/pages/**"></security:http>-->
    <security:http security="none" pattern="/login.html"></security:http>
    <security:http security="none" pattern="/css/**"></security:http>
    <security:http security="none" pattern="/img/**"></security:http>
    <security:http security="none" pattern="/js/**"></security:http>
    <security:http security="none" pattern="/plugins/**"></security:http>


    <!--
            http：用于定义相关权限控制
            auto-config：是否自动配置
                            设置为true时框架会提供默认的一些配置，例如提供默认的登录页面、登出处理等
                            设置为false时需要显示提供登录表单配置，否则会报错
            use-expressions：用于指定intercept-url中的access属性是否使用表达式
        -->
    <security:http auto-config="true" use-expressions="true">
        <security:headers >
            <!--设置在页面可以通过iframe访问受保护的页面,默认为不允许-->
            <security:frame-options policy="SAMEORIGIN"></security:frame-options>
        </security:headers>
        <!--
            intercept-url：定义一个拦截规则
            pattern：对哪些url进行权限控制
            access：在请求对应的URL时需要什么权限，默认配置时它应该是一个以逗号分隔的角色列表，
                        请求的用户只需拥有其中的一个角色就能成功访问对应的URL
        -->
        <!--只要认证通过就可以访问-->
        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>

        <!--如果我们要使用自己指定的登录页面,必须配置登录页面-->
        <security:form-login
                login-page="/login.html"
                username-parameter="username"
                password-parameter="password"
                login-processing-url="/login.do"
                default-target-url="/pages/main.html"
                authentication-failure-url="/login.html"></security:form-login>

        <!--关闭过滤器-->
        <security:csrf disabled="true"></security:csrf>

        <!--
          logout：退出登录
          logout-url：退出登录操作对应的请求路径
          logout-success-url：退出登录后的跳转页面
        -->
        <security:logout logout-url="/logout.do"
                         logout-success-url="/login.html" invalidate-session="true"/>
    </security:http>


    <!-- authentication-manager：认证管理器，用于处理认证操作 -->
    <security:authentication-manager>
        <!-- authentication-provider：认证提供者，执行具体的认证逻辑 -->
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <!--<security:user-service>-->
            <!--<security:user name="admin" password="{noop}1234" authorities="ROLE_ADMIN"/>-->
            <!--</security:user-service>-->
            <!--指定对密码加密的引用对象-->
            <security:password-encoder ref="passwordEncoder"></security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--配置密码加密对象-->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--开启权限注解-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>